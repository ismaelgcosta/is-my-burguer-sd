server:
  servlet:
    context-path: /
  forward-headers-strategy: framework
  ssl:
    enabled: true
    key-store: classpath:springboot.p12
    jks-key-store: classpath:springboot.jks
    key-store-password: password
    key-store-type: pkcs12
    key-alias: springboot
    key-password: password
  port: 443

logging:
  level:
    org.springframework.cloud.gateway.server.mvc: TRACE
    org.springframework.web: TRACE

springdoc:
  version: '@springdoc.version@'
  swagger-ui:
    display-request-duration: true
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
    use-root-path: false
    show-actuator: true
    url: /api-docs.json
  show-actuator: false
  cache:
    disabled: true

aws:
  region: ${AWS_REGION}
  cognito:
    domain: ${CLIENT_DOMAIN}
    user-pool-id: ${AWS_COGNITO_USER_POOL_ID}

spring:
  cloud:
    gateway:
      httpclient:
        ssl:
          useInsecureTrustManager: true
  application:
    name: is-my-burguer-sd
  cloud.gateway.mvc:
    ssl:
      useInsecureTrustManager: true

  security:

    user:
      name: ${SERVICE_DISCOVERY_USERNAME}
      password: ${SERVICE_DISCOVERY_PASSWORD}

    oauth2:
      client:
        registration:
          cognito:
            client-id: ${CLIENT_CREDENTIALS_ID}
        provider:
          cognito:
            authorization-uri: https://${aws.cognito.domain}.auth.${aws.region}.amazoncognito.com/oauth2/authorize
            token-uri: https://${aws.cognito.domain}.auth.${aws.region}.amazoncognito.com/oauth2/token
            user-info-uri: https://${aws.cognito.domain}.auth.${aws.region}.amazoncognito.com/oauth2/userInfo
            jwk-set-uri: https://cognito-idp.${aws.region}.amazonaws.com/${aws.cognito.user-pool-id}/.well-known/jwks.json
            issuerUri: https://cognito-idp.${aws.region}.amazonaws.com/${aws.cognito.user-pool-id}
            user-name-attribute: username
            authorization-grant-type: authorization_code

        resourceserver:
          cognito:
            jws-algorithms: RS256
            jwk-set-uri: https://cognito-idp.${aws.region}.amazonaws.com/${aws.cognito.user-pool-id}/.well-known/jwks.json
            issuer-uri: https://cognito-idp.${aws.region}.amazonaws.com/${aws.cognito.user-pool-id}

eureka:
  server:
    remoteRegionTrustStore: classpath:springboot.p12
    remoteRegionTrustStorePassword: password
  instance:
    hostname: is-my-burguer-sd-lb
    preferIpAddress: false
    secure-port: ${server.port}
    secure-port-enabled: true
    non-secure-port-enabled: false
    secure-virtual-host-name: ${spring.application.name}
    home-page-url-path: https://${spring.cloud.client.hostname}:${server.port}/${server.servlet.context-path}/
    status-page-url-path: https://${spring.cloud.client.hostname}:${server.port}/${server.servlet.context-path}/info
    health-check-url: https://${spring.cloud.client.hostname}:${server.port}/${server.servlet.context-path}/health
    lease-renewal-interval-in-seconds: 90
  metadataMap:
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: https://${SERVICE_DISCOVERY_USERNAME}:${SERVICE_DISCOVERY_PASSWORD}@is-my-burguer-sd-lb/eureka
    tls:
      enabled: true
      key-store: classpath:springboot.p12
      key-store-password: password
      key-store-type: pkcs12
      key-alias: springboot
      key-password: password
      trust-store: classpath:springboot.p12
      trust-store-password: password
      trust-store-type: pkcs12
info:
  app:
    name: ${spring.application.name}

management:
  endpoints:
    web:
      exposure:
        include: '*'